@model HOLIX.Models.User; 

@{
    Layout = null;
}

@using (Html.BeginForm("Save", "Home", null, FormMethod.Post, false, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container mt-5 editContainer">

        <h2>Novo registro</h2>
        <hr />

        <h3>Informações gerais</h3>
        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.UserID)
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AddressID)
                @Html.ValidationMessageFor(model => model.AddressID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control fields", required = "" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <br />
        <h3>Endereço do homeoffice</h3>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressStreet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressStreet, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressStreet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressComplement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressComplement, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressComplement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressNumber, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressNeighborhood, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressNeighborhood, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressNeighborhood, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressPostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressPostalCode, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressPostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressCity, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressState, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressCountry, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.AddressCountry, new { htmlAttributes = new { @class = "form-control fields", required = "", maxLength = "256", @id = "descriptionField" } })
                @Html.ValidationMessageFor(model => model.AddressCountry, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>

    </div>
}


<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="http://getbootstrap.com/2.3.2/assets/js/bootstrap.js"></script>